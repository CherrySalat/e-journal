using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using ЭлектронныйЖурналКурсовой.Инструменты;
using ЭлектронныйЖурналКурсовой.Данные;

namespace ЭлектронныйЖурналКурсовой.Вид.Страницы
{
    /// <summary>
    /// Логика взаимодействия для СтраницаДляАдминимтратораОсновнаяПанель.xaml
    /// </summary>
    public partial class СтраницаДляАдминимтратораОсновнаяПанель : Page
    {
        public СтраницаДляАдминимтратораОсновнаяПанель()
        {
            InitializeComponent();
            ПанельПользователей.ItemsSource = ИнструментыДанных.ЭлектронныйЖурнал.пользователи.Select(х => new {Номер = х.номер, ФИО = х.фамилия + " " + х.имя + " " + х.отчество,Роль = х.должность,Группа = х.группа }).Distinct().ToList();
            ПанельГрупп.ItemsSource = ИнструментыДанных.ЭлектронныйЖурнал.учебная_группа
                           .Join(ИнструментыДанных.ЭлектронныйЖурнал.пользователи,
                                  х => х.руководитель_группы,
                                  у => у.номер,
                                  (х, у) => new { номер_группы = х.номер_группы, руководитель_группы = у.фамилия + " " + у.имя + " " + у.отчество }
                           ).ToList();
            ПанельПредметов.ItemsSource = ИнструментыДанных.ЭлектронныйЖурнал.предмет
                                                               .Join(ИнструментыДанных.ЭлектронныйЖурнал.пользователи,
                                                                      х => х.преподователь,
                                                                      у => у.номер,
                                                                      (х, у) => new { Номер = х.номер_предмета,предмет =  х.предмет1, преподователь = у.фамилия + " " + у.имя + " " + у.отчество, х.группа }
                                                               ).ToList();
                                                                     
        }

        private void КнопкаУдалитьПредмет_Нажать(object sender, RoutedEventArgs e)
        {
            if (ПанельПредметов.SelectedItems.Count != 1)
                return;
            dynamic предНомерОценки = ПанельПредметов.SelectedCells[0].Item;
            int НомерОценки;
            НомерОценки = (int)предНомерОценки.Номер;
            предмет удаляемаяОценка = ИнструментыДанных.ЭлектронныйЖурнал.предмет.Where(х => х.номер_предмета == НомерОценки).First();
            ИнструментыДанных.ЭлектронныйЖурнал.предмет.Remove(удаляемаяОценка);
            ИнструментыДанных.ЭлектронныйЖурнал.SaveChanges();
            ПанельПредметов.ItemsSource = ИнструментыДанных.ЭлектронныйЖурнал.предмет
                                                   .Join(ИнструментыДанных.ЭлектронныйЖурнал.пользователи,
                                                          х => х.преподователь,
                                                          у => у.номер,
                                                          (х, у) => new { Номер = х.номер_предмета, предмет = х.предмет1, преподователь = у.фамилия + " " + у.имя + " " + у.отчество, х.группа }
                                                   ).ToList();

        }

        private void КнопкаДобавитьПредмет_Нажать(object sender, RoutedEventArgs e)
        {
            NavigationService.Navigate(new СтраницаДляАдминимтратораДобавитьПредмет());
        }

        private void КнопкаДобавитьПользователя_Нажать(object sender, RoutedEventArgs e)
        {
            NavigationService.Navigate(new СтраницаДляАдминимтратораДобавитьПользователя());
        }

        private void КнопкаУдалитьПользователя_Нажать(object sender, RoutedEventArgs e)
        {
            if (ПанельПользователей.SelectedItems.Count != 1)
                return;
            dynamic предНомерОценки = ПанельПользователей.SelectedCells[0].Item;
            int НомерОценки;
            НомерОценки = (int)предНомерОценки.Номер;
            пользователи удаляемаяОценка = ИнструментыДанных.ЭлектронныйЖурнал.пользователи.Where(х => х.номер == НомерОценки).First();
            ИнструментыДанных.ЭлектронныйЖурнал.пользователи.Remove(удаляемаяОценка);
            ИнструментыДанных.ЭлектронныйЖурнал.SaveChanges();
            ПанельПользователей.ItemsSource = ИнструментыДанных.ЭлектронныйЖурнал.пользователи.Select(х => new { Номер = х.номер, ФИО = х.фамилия + " " + х.имя + " " + х.отчество, Роль = х.должность, Группа = х.группа }).Distinct().ToList();
        }

        private void КнопкаДобавитьГруппу_Нажать(object sender, RoutedEventArgs e)
        {
            NavigationService.Navigate(new СтраницаДляАдминимтратораДобавитьГруппу());
        }

        private void КнопкаУдалитьГруппу_Нажать(object sender, RoutedEventArgs e)
        {
            if (ПанельГрупп.SelectedItems.Count != 1)
                return;
            dynamic предНомерОценки = ПанельГрупп.SelectedCells[0].Item;
            string НомерОценки;
            НомерОценки = (string)предНомерОценки.номер_группы;
            учебная_группа удаляемаяОценка = ИнструментыДанных.ЭлектронныйЖурнал.учебная_группа.Where(х => х.номер_группы == НомерОценки).First();
            ИнструментыДанных.ЭлектронныйЖурнал.учебная_группа.Remove(удаляемаяОценка);
            ИнструментыДанных.ЭлектронныйЖурнал.SaveChanges();
            ПанельГрупп.ItemsSource = ИнструментыДанных.ЭлектронныйЖурнал.учебная_группа
                                       .Join(ИнструментыДанных.ЭлектронныйЖурнал.пользователи,
                                              х => х.руководитель_группы,
                                              у => у.номер,
                                              (х, у) => new { Номер = х.номер_группы, преподователь = у.фамилия + " " + у.имя + " " + у.отчество}
                                       ).ToList();


        }
    }
}
